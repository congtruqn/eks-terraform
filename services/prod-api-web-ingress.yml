apiVersion: apps/v1
kind: Deployment
metadata:
  name: hrm-api
  labels:
    app: hrm-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hrm-api
  template:
    metadata:
      labels:
        app: hrm-api
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: env
                    operator: In
                    values:
                      - prod
      containers:
      - name: hrm-api
        image: 473555546883.dkr.ecr.ap-southeast-1.amazonaws.com/hrm-api-prod:23
        imagePullPolicy: "Always"
        resources:
          limits:
            memory: "2G"
            cpu: 1
          requests:
            memory: "1G"
            cpu: "500m"

        command: ["npm"]
        args: ["run", "start:debug"]
        ports:
        - containerPort: 4000
---
apiVersion: v1
kind: Service
metadata:
  name: hrm-api
  labels:
    app: hrm-api
spec:
  type: ClusterIP
  ports:
   - port: 80
     targetPort: 4000
  selector:
   app: hrm-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hrm-web
  labels:
    app: hrm-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hrm-web
  template:
    metadata:
      labels:
        app: hrm-web
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: env
                    operator: In
                    values:
                      - prod
      containers:
      - name: hrm-web
        image: 473555546883.dkr.ecr.ap-southeast-1.amazonaws.com/hrm-web-prod:29
        imagePullPolicy: "Always"
        resources:
          limits:
            memory: "200Mi"
          requests:
            memory: "50Mi"
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: hrm-web
  labels:
    app: hrm-web
spec:
  type: ClusterIP
  ports:
   - port: 80
     targetPort: 80
  selector:
   app: hrm-web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hrm-prod
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "itv.kingwork.vn"
    http:
      paths:
      - pathType: Prefix
        path: "/api"
        backend:
          service:
            name: hrm-api
            port:
              number: 80
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: hrm-web
            port:
              number: 80